package com.jbrod.servidorprincipal.analizadores;
import java_cup.runtime.*;
import com.jbrod.servidorprincipal.trivias.Motor;

import com.jbrod.servidorprincipal.trivias.Componente;
import com.jbrod.servidorprincipal.trivias.Usuario;
import com.jbrod.servidorprincipal.trivias.Trivia;

import com.jbrod.servidorprincipal.trivias.componentes.*;


parser code{:
    
    public String resultado = "";
    public String usuarioSesionAprobada = "";
    private Motor motor;

    public boolean sesionEvaluada = false;

    // Conectar el parser al escaner
    public Parser(Lexer lex, Motor motor){
        super(lex);
        this.motor = motor;
    }

    public void syntax_error(Symbol cur_token){
        System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
        System.out.println("Linea " + cur_token.left);
        System.out.println("Columna " + cur_token.right);
        if (expected_token_ids().isEmpty()) {
            System.out.println("Ya no se esperaba ningun simbolo");
            //reporteErrores.agregarError(symbl_name_from_id(cur_token.sym),cur_token.left,cur_token.right, "Sintactico", "Ya no se esperaba ningun simbolo." );
        }else{
            //reporteErrores.agregarError(symbl_name_from_id(cur_token.sym),cur_token.left,cur_token.right, "Sintactico", "Se esperaba otro simbolo." );
        }
    }

    /*public void unrecovered_syntax_error(Symbol cur_token) {
        System.out.println("Error irrecuperable sobrecargado");
    }*/

   private String secureString(Object o){
        if( o != null){
            return o.toString();
        }else{
            return "";
        }
   }

   private int secureInt(Object o){
        String i = secureString(o);
        System.out.println("A convertir: " + i);
        try{
            int n = Integer.parseInt(i);
            System.out.println("Convertido: " + n);
            return n;
        }catch(NumberFormatException e){
            System.out.println("Hubo un error al convertir un numero.");
            return 10;
        }
   }

   private void imprimir(String st){
        System.out.println(st + "\n\n\n\n");
   }

:}

/* - - - - - - - - - - - - - - - - - - - - - - - Terminales - - - - - - - - - - - - - - - - - - - - - - - */
/* Numeros, Identificadores, Strings */
terminal NUMERO, IDENTIFICADOR, STRING, ENCABEZADO;

/* Operadores */
terminal MENQUE, MAYQUE, EXCLAM, DOSPUN, LLAVOP, LLAVCL, COROPN, CORCLS, COMMA, QSTMRK, COMILL, ORSYMB;

/* Encabezados de solicitudes */
terminal REALIZAR_SOL, FIN_SOL_REAL;

/* Usuarios */
terminal USUARIO_NUEV, DATOS_USUARI, USUARIO, PASSWORD, NOMBRE, INSTITUCION;

/* Modificar usuarios */
terminal MODI_USUARIO, USUA_ANTIGUO, NUEVO_PASSWO, ELIMINAR_USU;

/* Login usuario */
terminal LOGIN_USUARI;

/* Trivias */
terminal NUEVA_TRIVIA, PARAM_TRIVIA, ID_TRIVIA, TIEMPO_PREGU, TEMA;

/* Modificar trivias */
terminal CAMPO_TEXTO, AREA_TEXTO, CHECKBOX, RADIO, FICHERO, COMBO;

terminal ELIMINAR_TRI, MODIF_TRIVIA, AGREGAR_COMP, ELIMINAR_COM, MODIFICAR_CM, PARAMETROS_C, ID, TRIVIA, RESPUESTA, CLASE, TEXTO_VISIBL, OPCIONES, INDICE, FILAS, COLUMNAS;

/* - - - - - - - - - - - - - - - - - - - - - - No terminales - - - - - - - - - - - - - - - - - - - - - - */
non terminal inicio; 

/* Solicitudes */
non terminal solicitud, solicitudes; 

non terminal solicitud_simple, usuario_nuevo, modificar_usuario, eliminar_usuario, login_usuario;
non terminal nueva_trivia, eliminar_trivia, modificar_parametros_trivia, agregar_componente_trivia, eliminar_componente_trivia, modificar_componente_trivia; 

/* Auxiliares */
non terminal id_st;
non terminal opciones; 
non terminal respuesta;

/* Componentes */
non terminal componente_trivia ,campo_texto, area_texto, checkbox, radio, fichero, combo; 

/* - - - - - - - - - - - - - - - - - - - - - - - Producciones - - - - - - - - - - - - - - - - - - - - - - - */
start with inicio; 
inicio ::= solicitudes;
//inicio ::= solicitud_simple;  

solicitudes ::= solicitud_simple solicitudes | /*  */;
solicitud_simple ::= usuario_nuevo | modificar_usuario | eliminar_usuario | login_usuario;
solicitud_simple ::= nueva_trivia | eliminar_trivia | modificar_parametros_trivia | agregar_componente_trivia | eliminar_componente_trivia | modificar_componente_trivia;

id_st ::= IDENTIFICADOR:id {: RESULT = id; :} 
        | STRING:st {: RESULT = st; :};

/* Usuarios */
usuario_nuevo ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL USUARIO_NUEV COMILL MAYQUE LLAVOP COMILL DATOS_USUARI COMILL DOSPUN COROPN LLAVOP
            COMILL USUARIO COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
            COMILL PASSWORD COMILL DOSPUN COMILL id_st:ps COMILL COMMA
            COMILL NOMBRE COMILL DOSPUN COMILL id_st:nm COMILL COMMA
            COMILL INSTITUCION COMILL DOSPUN COMILL id_st:in COMILL 
            LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Usuario nuevo: " +  id.toString() + " " + ps.toString() + " " + nm.toString() + " " + in.toString () + "\n";
                Usuario usuario = new Usuario(secureString(id), secureString(ps), secureString(nm), secureString(in));
                imprimir(motor.agregarUsuario(usuario));
            :};

modificar_usuario ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL MODI_USUARIO COMILL MAYQUE
                LLAVOP COMILL DATOS_USUARI COMILL DOSPUN COROPN LLAVOP
                       COMILL USUA_ANTIGUO COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA 
                       COMILL USUARIO_NUEV COMILL DOSPUN COMILL IDENTIFICADOR:nid COMILL COMMA
                       COMILL NUEVO_PASSWO COMILL DOSPUN COMILL id_st:ps COMILL 
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Modificar usuario: " + id.toString() + " " + nid.toString() + " " + ps.toString() + "\n";
                imprimir( motor.modificarUsuario( secureString(id), secureString(nid), secureString(ps) ) );
            :};

eliminar_usuario ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL ELIMINAR_USU COMILL MAYQUE
                LLAVOP COMILL DATOS_USUARI COMILL DOSPUN COROPN LLAVOP
                COMILL USUARIO COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Eliminar usuario: " + id.toString() + " \n";
                imprimir( motor.eliminarUsuario(secureString(id)) );
            :};

login_usuario ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL LOGIN_USUARI COMILL MAYQUE
                LLAVOP COMILL DATOS_USUARI  COMILL DOSPUN COROPN LLAVOP
                       COMILL USUARIO COMILL       DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                       COMILL PASSWORD      COMILL DOSPUN COMILL id_st:ps COMILL
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Login: " + id.toString() + " " + ps.toString();
                sesionEvaluada = true;
                String sesion = motor.loginUsuario(secureString(id), secureString(ps));
                imprimir( sesion );
                if(sesion.equals("No se encontro el usuario especificado") || sesion.equals("Contrasena incorrecta.")){
                    System.out.println("Inicio de sesion denegado.");
                    usuarioSesionAprobada = "";
                    resultado += " Inicio de sesion denegado\n";
                }else{
                    System.out.println("Inicio de sesion aprobado.");
                    resultado += " Inicio de sesion aprobado\n";
                    usuarioSesionAprobada = secureString(id);
                }
            :};








/* Trivias */
nueva_trivia ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL NUEVA_TRIVIA COMILL MAYQUE
                LLAVOP COMILL PARAM_TRIVIA COMILL DOSPUN COROPN LLAVOP 
                COMILL ID_TRIVIA    COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                COMILL TIEMPO_PREGU COMILL DOSPUN        STRING:tp               COMMA
                COMILL NOMBRE       COMILL DOSPUN COMILL id_st:nm         COMILL COMMA
                COMILL TEMA         COMILL DOSPUN COMILL id_st:tm         COMILL
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Nueva trivia: " + id.toString() + " " + tp.toString()+ " " + nm.toString() + " " + tm.toString() + " \n";
                Trivia trivia = new Trivia(
                    secureString(id),
                    secureString(nm),
                    secureString(tm),
                    "Falta agregar usuario",
                    "Falta agregar fecha", 
                    secureInt(tp)

                );
                imprimir( motor.agregarTrivia(trivia) );
            :};

eliminar_trivia ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL ELIMINAR_TRI COMILL MAYQUE
                LLAVOP COMILL PARAM_TRIVIA COMILL DOSPUN COROPN LLAVOP 
                COMILL ID_TRIVIA COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL 
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Eliminar trivia: " + id.toString() + " \n";
                imprimir( motor.eliminarTrivia(secureString(id)) );
            :};

modificar_parametros_trivia ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL MODIF_TRIVIA COMILL MAYQUE
                LLAVOP COMILL PARAM_TRIVIA COMILL DOSPUN COROPN LLAVOP 
                COMILL ID_TRIVIA    COMILL DOSPUN COMILL id_st:id  COMILL COMMA
                COMILL TIEMPO_PREGU COMILL DOSPUN        STRING:tp COMMA
                COMILL NOMBRE       COMILL DOSPUN COMILL id_st:nm  COMILL COMMA
                COMILL TEMA         COMILL DOSPUN COMILL id_st:tm  COMILL 
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Modificar trivia: " + id.toString() + " " + tp.toString()+ " " + nm.toString() + " " + tm.toString() + " \n";
                imprimir( motor.modificarParametrosTrivia(
                    secureString(id),
                    secureInt(tp),
                    secureString(nm),
                    secureString(tm)
                ) );
            :};






eliminar_componente_trivia ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL ELIMINAR_COM COMILL MAYQUE
                LLAVOP COMILL PARAMETROS_C COMILL DOSPUN COROPN LLAVOP 
                COMILL ID COMILL DOSPUN COMILL IDENTIFICADOR:cm COMILL COMMA
                COMILL TRIVIA COMILL DOSPUN COMILL IDENTIFICADOR:tr COMILL
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                resultado += "Eliminar componente: " + cm.toString() + " " + tr.toString() + " \n";
                imprimir(
                    motor.eliminarComponenteTrivia(secureString(tr), secureString(cm))
                );
            :};


/* Hacer que los componentes devuelvan el componente creado y utilizarlo en base a lo que se necesite */
agregar_componente_trivia ::=  MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL AGREGAR_COMP COMILL MAYQUE
                LLAVOP COMILL PARAMETROS_C COMILL DOSPUN COROPN LLAVOP
                componente_trivia:c
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                //resultado += "Agregar componente: " + c.toString() + " \n";
                imprimir(motor.agregarComponenteTrivia(((Componente)c).getId_trivia(), ((Componente)c)));

            :};

modificar_componente_trivia ::= MENQUE EXCLAM REALIZAR_SOL DOSPUN COMILL MODIFICAR_CM COMILL MAYQUE
                LLAVOP COMILL PARAMETROS_C COMILL DOSPUN COROPN LLAVOP
                componente_trivia:c
                LLAVCL CORCLS LLAVCL MENQUE FIN_SOL_REAL EXCLAM MAYQUE{: 
                //resultado += "Agregar componente: " + c.toString() + " \n";
                imprimir(motor.modificarComponenteTrivia(((Componente)c).getId_trivia(), ((Componente)c)));
            :};


    opciones ::= id_st:op {: RESULT = op.toString(); :}; 
    opciones ::= id_st:op ORSYMB opciones:opcs {: RESULT = op.toString() + "|" + opcs.toString(); :}; 
    respuesta ::=opciones:r {: RESULT = r.toString(); :};

    componente_trivia ::= campo_texto:r {:RESULT = r;:}| area_texto:r {:RESULT = r;:} | checkbox:r {:RESULT = r;:} | radio:r {:RESULT = r;:} | fichero:r {:RESULT = r;:} | combo:r {:RESULT = r;:};

    campo_texto ::= COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL CAMPO_TEXTO      COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL COMMA
                    COMILL RESPUESTA    COMILL DOSPUN COMILL respuesta:rs     COMILL 
                    {: 
                        resultado +=  "COMPONENTE: Campo de texto: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx)+ " " + secureString(rs) + "\n"; 
                        CampoTexto campo = new CampoTexto(
                            secureString(id),
                            secureString(tv),
                            secureInt(in),
                            secureString(tx),
                            secureString(rs)
                        );
                        RESULT = campo;
                    :};

    area_texto ::=  COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL AREA_TEXTO       COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL COMMA
                    COMILL RESPUESTA    COMILL DOSPUN COMILL respuesta:rs     COMILL COMMA
                    COMILL FILAS        COMILL DOSPUN        id_st:fl                COMMA
                    COMILL COLUMNAS     COMILL DOSPUN        id_st:cl          
                    {: 
                        resultado +=  "COMPONENTE: Area de texto: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx)+ " " + secureString(rs) +  " " + secureString(fl)+ " " + secureString(cl) + "\n"; 
                        AreaTexto area = new AreaTexto(
                            secureInt(fl),
                            secureInt(cl),

                            secureString(id),
                            secureString(tv),
                            secureInt(in),
                            secureString(tx),
                            secureString(rs)
                        );
                        RESULT = area;
                    :};

    checkbox ::=    COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL CHECKBOX         COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL COMMA
                    COMILL RESPUESTA    COMILL DOSPUN COMILL respuesta:rs     COMILL COMMA
                    COMILL OPCIONES     COMILL DOSPUN COMILL opciones:op      COMILL 
                    {: 
                        resultado +=  "COMPONENTE: Checkbox: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx)+ " " + secureString(rs) +  " " + " OPCIONES: " + secureString(op) + "\n"; 
                        Checkbox checkbox = new Checkbox(
                            secureString(op),
                            secureString(id),
                            secureString(tv),

                            secureInt(in),
                            secureString(tx),
                            secureString(rs)
                        );
                        RESULT = checkbox;
                    :};

    radio    ::=    COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL RADIO            COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL COMMA
                    COMILL RESPUESTA    COMILL DOSPUN COMILL respuesta:rs     COMILL COMMA
                    COMILL OPCIONES     COMILL DOSPUN COMILL opciones:op      COMILL 
                    {: 
                        resultado +=  "COMPONENTE: Radio: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx)+ " " + secureString(rs) +  " " + " OPCIONES: " + secureString(op) + "\n"; 
                        Radio radio = new Radio(
                            secureString(op),
                            secureString(id),
                            secureString(tv),

                            secureInt(in),
                            secureString(tx),
                            secureString(rs)
                        );
                        RESULT = radio; 
                    :};

    fichero ::=     COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL FICHERO          COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL 
                    {: 
                        resultado +=  "Fichero: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx) + "\n"; 
                        Fichero fichero = new Fichero(
                            secureString(id),
                            secureString(tv),

                            secureInt(in),
                            secureString(tx)
                        );
                        RESULT = fichero;
                    :};
    
    combo ::=       COMILL ID           COMILL DOSPUN COMILL IDENTIFICADOR:id COMILL COMMA
                    COMILL TRIVIA       COMILL DOSPUN COMILL IDENTIFICADOR:tv COMILL COMMA
                    COMILL CLASE        COMILL DOSPUN COMILL COMBO            COMILL COMMA
                    COMILL INDICE       COMILL DOSPUN        id_st:in                COMMA 
                    COMILL TEXTO_VISIBL COMILL DOSPUN COMILL id_st:tx         COMILL COMMA
                    COMILL RESPUESTA    COMILL DOSPUN COMILL respuesta:rs     COMILL COMMA
                    COMILL OPCIONES     COMILL DOSPUN COMILL opciones:op      COMILL 
                    {: 
                        resultado +=  "Combo: " + secureString(id) + " " + secureString(tv)+ " " + secureString(in)+ " " + secureString(tx)+ " " + secureString(rs) +  " " + " OPCIONES: " + secureString(op) + "\n"; 
                        Combo combo = new Combo(
                            secureString(op),
                            secureString(id),
                            secureString(tv),

                            secureInt(in),
                            secureString(tx),
                            secureString(rs)
                        );
                        RESULT = combo;
                    :};

